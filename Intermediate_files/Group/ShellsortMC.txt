Number of questions => 4$$
Question text => How should Shellsort's sublists be sorted?$$
Solution => Using Insertion sort because Shellsort generally makes each subarray reasonably close to sorted.$$
Choice 1 => Using any sort that you like, it doesn't matter so long as they are sorted.$$
Choice 2 => Using Quicksort, because this is generally the fastest sort.$$
Choice 3 => Using Insertion sort because Shellsort generally makes each subarray reasonably close to sorted.$$
Choice 4 => Using bubble sort since that is the most appropriate sort in this situation.$$
Choice 5 => Using Shellsort since this is a recursive algorithm.$$
Hint 1 => Shellsort isn't really recursive, is it?$$
Hint 2 => The sort that you use on sublists really does matter.$$
Hint 3 => Do you remember why Shellsort sorts sublists?$$
Hint 4 => Recall that the main purpose for sorting sublists in the first place is to make the list closer to sorted.$$
Question text =>  What is the best case input for Shellsort?$$
Solution => A sorted array because each sublist is sorted in linear time.$$
Choice 1 => A sorted array because each sublist is sorted in linear time.$$
Choice 2 => A reverse sorted array because because all the sublists are sorted in linear time.$$
Choice 3 => A random array, without too much order or dis-order, which will keep things balanced.$$
Choice 4 => It doesn't matter, all inputs of a given size will cost the same.$$
Choice 5 => If the input to Shellsort is ordered, than the input to
	  each call to Insertion sort on the sublists will also be
	  ordered.$$
Hint 1 => The order of the input does affect the cost.$$
Hint 2 => Remember what sort is used for sorting the sublists.$$
Hint 3 => Insertion sort is used to sort the sublists.$$
Hint 4 => Insertion sort's best case is when the input is ordered$$
Question text => Which is the divide-by-twos increment series for an array of 32 elements?$$
Solution => 16, 8, 4, 2, 1$$
Choice 1 => 8, 4, 2, 1$$
Choice 2 => 16, 8, 4, 2, 1$$
Choice 3 => 32, 4, 1$$
Choice 4 => 16, 4, 1$$
Choice 5 => More than one of these.$$
Hint 1 => The first increment must be a power of 2 that generates sublists with two elements.$$
Hint 2 => Each succeeding increment must be half the size of the previous one.$$
Hint 3 => $$
Hint 4 => $$
Question text => Which of these inputs will cost the most for Shellsort when using divide-by-twos increments on an array with a size where n is a power of 2?$$
Solution => An array where even positions store values 1 to n/2 and odd positions store values n/2+1 to n.$$
Choice 1 => A sorted array.$$
Choice 2 => A reverse sorted array.$$
Choice 3 => An array where even positions store values 1 to n/2 and odd positions store values n/2+1 to n.$$
Choice 4 => An array with random input.$$
Choice 5 => An array with random input.$$
Hint 1 => -$$
Hint 2 => -$$
Hint 3 => -$$
Hint 4 => -$$
